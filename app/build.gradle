dependencies {
    implementation project(":app:cache")
    implementation project(":app:kafka")
    implementation project(":app:models")
    implementation project(":app:persistence")
    implementation project(":app:rest")
    implementation project(":app:service")
    implementation project(":app:service-api")

    implementation("org.springframework.boot:spring-boot-starter-web")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    implementation(platform("io.opentelemetry:opentelemetry-bom:${opentelemetry_version}"))
    implementation "io.opentelemetry:opentelemetry-api"
    runtimeOnly "io.opentelemetry.javaagent:opentelemetry-javaagent:${opentelemetry_version}"
    runtimeOnly "org.springframework.boot:spring-boot-devtools"
    testImplementation "io.projectreactor:reactor-test"
}

tasks.register('customFatJar', Jar) {
    manifest {
        attributes "Main-Class": "com.simple.main.SimpleApplication"
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}